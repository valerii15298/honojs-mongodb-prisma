datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator zod {
  output                    = "../src/generated/zod"
  provider                  = "zod-prisma-types"
  createRelationValuesTypes = true
}

model DataStructure {
  id String @id @map("_id")

  zone     Zone?   @relation(name: "ZoneDataStructuresRelation", fields: [zoneCode], references: [code])
  zoneCode String?

  sinkZone     Zone?   @relation(name: "SinkZoneDataStructuresRelation", fields: [sinkZoneCode], references: [code])
  sinkZoneCode String?

  location     Location? @relation(fields: [locationCode], references: [code])
  locationCode String?

  description          String?
  commodity            String?
  loadProfile          String?
  resolution           String
  supportedResolutions String[]
  period               String?
  fuels                String[]
  source               String?
  market               String?
  timezone             String
  supportedTimezones   String[]
  unit                 String
  supportedUnits       String[]

  dataType       String
  dataCategories String[]
  platform       String
  platformRef    String
}

model Location {
  code String @id @map("_id")

  efficiency     String?
  name           String?
  plant          String?
  fuel           String?
  detailedFuel   String?
  operator       String?
  techowner      String?
  location       String?
  syszone        String?
  region         String?
  capacity       String?
  commissionYear String?
  connection     String?
  technology     String?
  turbines       String?
  latlong        String?
  unitType       String?
  publiCode1     String?
  publicCode2    String?
  privateCode1   String?
  privateCode2   String?
  privateCode3   String?
  DataStructure  DataStructure[]
}

model Zone {
  code       String @id @map("_id")
  parentCode String /// TODO validate it on insertion // TODO only allow as parent one "001"

  parent     Zone   @relation("ParentZone", fields: [parentCode], references: [code], onDelete: NoAction, onUpdate: NoAction)
  childZones Zone[] @relation("ParentZone")

  name String

  type  ZoneType[]
  coord Int[]

  DataStructures     DataStructure[] @relation(name: "ZoneDataStructuresRelation")
  DataStructuresSink DataStructure[] @relation(name: "SinkZoneDataStructuresRelation")
}

enum ZoneType {
  region
  subregion
  country
  subdivision
  price
}
